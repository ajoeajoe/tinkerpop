<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-dotnet</artifactId>
        <version>3.3.1-SNAPSHOT</version>
    </parent>
    <artifactId>gremlin-dotnet-tests</artifactId>
    <name>Apache TinkerPop :: Gremlin.Net - Tests</name>
    <packaging>${packaging.type}</packaging>
    <properties>
        <!-- provides a way to convert maven.test.skip value to skipTests for use in skipping dotnet tests -->
        <maven.test.skip>false</maven.test.skip>
        <skipTests>${maven.test.skip}</skipTests>
        <!-- this path only works when maven is started from the direct parent directory, this should be fixed -->
        <gremlin.server.dir>${project.parent.parent.basedir}/gremlin-server</gremlin.server.dir>
    </properties>

    <build>
        <plugins>
            <!-- Override the execution from gremlin-dotnet to disable code generation from happening a second time -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-dsl</id>
                        <phase/>
                    </execution>
                </executions>
            </plugin>
            <!--
            there is no point to deploying the jvm stuff - there is no java source really - just poms
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>gremlin-dotnet-standard</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>pom</packaging.type>
            </properties>
        </profile>
        <!-- activates the building of .NET components and requires that the .NET Core SDK be installed on the system -->
        <profile>
            <id>gremlin-dotnet</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <file>
                    <exists>.glv</exists>
                </file>
            </activation>
            <properties>
                <packaging.type>dotnet-integration-test</packaging.type>
            </properties>
            <build>
                <directory>${basedir}/target</directory>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eobjects.build</groupId>
                        <artifactId>dotnet-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>log4j</groupId>
                                <artifactId>log4j</artifactId>
                                <version>1.2.17</version>
                                <scope>runtime</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.tinkerpop</groupId>
                                <artifactId>gremlin-server</artifactId>
                                <version>${project.version}</version>
                                <scope>runtime</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-ant</artifactId>
                                <version>${groovy.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>gremlin-server-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <![CDATA[
import org.apache.tinkerpop.gremlin.server.GremlinServer
import org.apache.tinkerpop.gremlin.server.Settings
import org.apache.tinkerpop.gremlin.server.Settings.ScriptEngineSettings
import org.apache.tinkerpop.gremlin.server.Settings.SerializerSettings
import java.util.Properties

if (${skipTests}) return

log.info("Starting Gremlin Server instances for native testing of gremlin-dotnet")
def settings = Settings.read("${gremlin.server.dir}/conf/gremlin-server-modern.yaml")
settings.graphs.graph = "${gremlin.server.dir}/conf/tinkergraph-empty.properties"
settings.scriptEngines["gremlin-groovy"].plugins["org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin"].files = ["${gremlin.server.dir}/scripts/generate-modern.groovy"]
settings.port = 45950

def server = new GremlinServer(settings)
server.start().join()

project.setContextValue("gremlin.dotnet.server", server)
log.info("Gremlin Server with no authentication started on port 45950")

def securePropsFile = new File('${project.basedir}/target/tinkergraph-credentials.properties')
if (!securePropsFile.exists()) {
  securePropsFile.createNewFile()
  securePropsFile << "gremlin.graph=org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerGraph\n"
  securePropsFile << "gremlin.tinkergraph.vertexIdManager=LONG\n"
  securePropsFile << "gremlin.tinkergraph.graphLocation=${gremlin.server.dir}/data/credentials.kryo\n"
  securePropsFile << "gremlin.tinkergraph.graphFormat=gryo"
}

def settingsSecure = Settings.read("${gremlin.server.dir}/conf/gremlin-server-modern.yaml")
settingsSecure.graphs.graph = "${gremlin.server.dir}/conf/tinkergraph-empty.properties"
settingsSecure.scriptEngines["gremlin-groovy"].plugins["org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin"].files = ["${gremlin.server.dir}/scripts/generate-modern.groovy"]
settingsSecure.port = 45951
settingsSecure.authentication.authenticator = "org.apache.tinkerpop.gremlin.server.auth.SimpleAuthenticator"
settingsSecure.authentication.config = [credentialsDb: "${project.basedir}/target/tinkergraph-credentials.properties"]

def serverSecure = new GremlinServer(settingsSecure)
serverSecure.start().join()

project.setContextValue("gremlin.dotnet.server.secure", serverSecure)
log.info("Gremlin Server with authentication started on port 45951")
]]>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                            <execution>
                                <id>gremlin-server-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <scripts>
                                        <script>
                                            <![CDATA[
import org.apache.tinkerpop.gremlin.server.GremlinServer

if (${skipTests}) return

log.info("Tests for native gremlin-dotnet complete")

def server = project.getContextValue("gremlin.dotnet.server")
log.info("Shutting down $server")
server.stop().join()

def serverSecure = project.getContextValue("gremlin.dotnet.server.secure")
log.info("Shutting down $serverSecure")
serverSecure.stop().join()

log.info("Gremlin Server instance shutdown for gremlin-dotnet")
]]>
                                        </script>
                                    </scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>